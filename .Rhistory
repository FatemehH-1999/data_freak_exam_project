#Description of code parts----
##loading libraries----
library(tidyverse)
library(here)
##loading post-tidied data set----
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ")
data_join <- read_delim(here("data", "exam_data_join.txt"), delim = "\t")
#looking at data set
glimpse(data)
##Make necessary changes in variable types.----
###changing type of column "ID" and "age" to numeric instead of character
data$ID <- as.numeric(data$ID)
data$age <- as.numeric(data$age)
##A column showing whether rec_ver_tat is higher than 100 or not: values High/Low.
data <- data %>%
distinct() %>%
pivot_wider(
names_from = time_measurement,
values_from = value)
data <- data %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
##Remove unnecessary columns from your dataframe: row, test_id, demo_group.----
###removing 3 columns from data set: "row", "test_id", "demo_group"
data <- data %>%
select(-c(row, test_id, demo_group))
###A numeric column showing pan_day in weeks----
data <-
data %>%
mutate(pan_week = pan_day/7)
###A column showing drive_thru_ind as Yes/No----
data <- data %>%
mutate(drive_thru_ind = if_else(drive_thru_ind == TRUE, "Yes","No"))
###A numeric column showing multiplication of ct_result and orderset for each person----
data <-
data %>%
mutate(multi_ct_result_orderset = ct_result*orderset) %>%
drop_na(multi_ct_result_orderset)
##Set the order of columns as: id, age, gender and other columns----
data <- data %>%
select("ID", "age", "gender", everything())
##Arrange ID column of your dataset in order of increasing number or alphabetically.----
data <- data %>%
arrange(ID)
##read and join the additional dataset to your main dataset.----
data_join <- read_delim(here("data", "exam_data_join.txt"), delim = "\t")
data <- data %>%
left_join(data_join, join_by("ID" == "id"))
#Executable script----
library(tidyverse)
library(here)
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ") %>%
mutate(ID = as.numeric(ID), age = as.numeric(age)) %>%
distinct() %>%
pivot_wider(names_from = time_measurement, values_from = value) %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High")) %>%
select(-c(row, test_id, demo_group)) %>%
mutate(pan_week = pan_day/7) %>%
mutate(drive_thru_ind = if_else(drive_thru_ind == TRUE, "Yes","No")) %>%
mutate(multi_ct_result_orderset = ct_result*orderset) %>%
drop_na(multi_ct_result_orderset) %>%
select("ID", "age", "gender", everything()) %>%
arrange(ID) %>%
left_join(read_delim(here("data", "exam_data_join.txt"), delim = "\t"), join_by("ID" == "id")) %>%
write_delim(here("data", "exam_data_tidier_2025-09-09.txt"), delim = " ")
#Explore data----
head(data)
glimpse(data)
tail(data)
data <- df %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = round(missing_count / nrow(df) * 100, 2)) %>%
arrange(desc(missing_percent))
df <- read_csv("data")
df <- read_csv("data.csv")
#Executable script----
library(tidyverse)
library(here)
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ") %>%
mutate(ID = as.numeric(ID), age = as.numeric(age)) %>%
distinct() %>%
pivot_wider(names_from = time_measurement, values_from = value) %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High")) %>%
select(-c(row, test_id, demo_group)) %>%
mutate(pan_week = pan_day/7) %>%
mutate(drive_thru_ind = if_else(drive_thru_ind == TRUE, "Yes","No")) %>%
mutate(multi_ct_result_orderset = ct_result*orderset) %>%
drop_na(multi_ct_result_orderset) %>%
select("ID", "age", "gender", everything()) %>%
arrange(ID) %>%
left_join(read_delim(here("data", "exam_data_join.txt"), delim = "\t"), join_by("ID" == "id")) %>%
write_delim(here("data", "exam_data_tidier_2025-09-09.txt"), delim = " ")
#Explore data----
head(data)
glimpse(data)
tail(data)
# Count missing values in each column
data <- df %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = 100 * missing_count / nrow(df)) %>%
arrange(desc(missing_percent))
#Explore and comment on the missing variables----
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = "\t")
data <- df %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = 100 * missing_count / nrow(df)) %>%
arrange(desc(missing_percent))
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = "\t")
data_missing <- data %>%                                  # <-- use 'data' here
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = 100 * missing_count / nrow(data)) %>%   # and here
arrange(desc(missing_percent))
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = "\t") %>%                                  # <-- use 'data' here
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = 100 * missing_count / nrow(data)) %>%   # and here
arrange(desc(missing_percent))
View(data_missing)
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = "\t") %>%                                  # <-- use 'data' here
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = 100 * missing_count / nrow(data)) %>%   # and here
arrange(desc(missing_percent))
View(data)
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ") %>%
mutate(ID = as.numeric(ID), age = as.numeric(age)) %>%
distinct() %>%
pivot_wider(names_from = time_measurement, values_from = value) %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High")) %>%
select(-c(row, test_id, demo_group)) %>%
mutate(pan_week = pan_day/7) %>%
mutate(drive_thru_ind = if_else(drive_thru_ind == TRUE, "Yes","No")) %>%
mutate(multi_ct_result_orderset = ct_result*orderset) %>%
drop_na(multi_ct_result_orderset) %>%
select("ID", "age", "gender", everything()) %>%
arrange(ID) %>%
left_join(read_delim(here("data", "exam_data_join.txt"), delim = "\t"), join_by("ID" == "id")) %>%
write_delim(here("data", "exam_data_tidier_2025-09-09.txt"), delim = " ")
View(data)
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = "\t") %>%                                  # <-- use 'data' here
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "missing_count") %>%
mutate(missing_percent = 100 * missing_count / nrow(data)) %>%
arrange(desc(missing_percent))
View(data)
data1 <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ")
data_stratified_ct_result <- data1 %>%
filter(ct_result == 45) %>%
arrange(pan_day)
data1 <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ")
data_stratified_ct_result <- data1 %>%
filter(ct_result == 45) %>%
arrange(ct_result)
data1 %>%
group_by(sex) %>%                                # <-- stratify by your categorical column
summarise(
min_age  = min(age, na.rm = TRUE),             # minimum
max_age  = max(age, na.rm = TRUE),             # maximum
mean_age = mean(age, na.rm = TRUE),            # mean
sd_age   = sd(age, na.rm = TRUE)               # standard deviation
)
data1 <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ")
data_stratified_ct_result <- data1 %>%
filter(ct_result == 45) %>%
arrange(ct_result)
data1 %>%
group_by(sex) %>%                                # <-- stratify by your categorical column
summarise(
min_age  = min(age, na.rm = TRUE),             # minimum
max_age  = max(age, na.rm = TRUE),             # maximum
mean_age = mean(age, na.rm = TRUE),            # mean
sd_age   = sd(age, na.rm = TRUE)               # standard deviation
)
data1 %>%
filter(ct_result == 45) %>%                                # <-- stratify by your categorical column
group_by(ct_result) %>%
summarise(n = n(),
min = min(age),
max = max(age),
mean = mean(age),
sd = sd(age))
data1 %>%
filter(ct_result == 50) %>%
summarise(n = n(),
min = min(age),
max = max(age),
mean = mean(age),
sd = sd(age))
#Task4_Fatemeh
#Create plots that would help answer these questions:
##Does the distribution of the ct_result differ with sex group?
data <- read_delim(here("data", "exam_data_tidy_2025-09-08.txt"), delim = " ")
View(data_join)
View(data1)
View(data_join)
View(data_stratified_ct_result)
View(data_missing)
#Task4_Fatemeh
#Create plots that would help answer these questions:
##Does the distribution of the ct_result differ with sex group?
data <- read_delim(here("data", "data/20250917-tidy-exam-data.txt"), delim = " ")
#Task4_Fatemeh
#Create plots that would help answer these questions:
##Does the distribution of the ct_result differ with sex group?
data <- read_delim(here("data", "20250917-tidy-exam-data.txt"), delim = " ")
#Task4_Fatemeh
#Create plots that would help answer these questions:
##Does the distribution of the ct_result differ with sex group?
library(tidyverse)
library(here)
data <- read_delim(here("data", "20250917-tidy-exam-data.txt"), delim = " ")
ggplot(data, aes(x = sex, y = ct_result, fill = sex)) +
geom_boxplot(alpha = 0.7, outlier.color = "red") +
labs(title = "Distribution of ct_result by Sex",
x = "Sex",
y = "ct_result") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data, aes(x = sex, y = ct_result, fill = sex)) +
geom_boxplot(alpha = 0.7, outlier.color = "red") +
labs(title = "Distribution of ct_result by Sex",
x = "age",
y = "ct_result") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data, aes(x = age, y = ct_result, fill = age)) +
geom_boxplot(alpha = 0.7, outlier.color = "red") +
labs(title = "Distribution of ct_result by age",
x = "age",
y = "ct_result") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = sex, y = ct_result)) +
geom_boxplot()
data
View(data)
data <- read_delim(here("data", "20250917-tidy-exam-data.txt"), delim = "\t")
data
View(data)
