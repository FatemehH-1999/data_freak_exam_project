scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 4, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 4, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges2(scale = 4) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 4) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges() +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 10) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 1) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 2) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 10) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result)) +
geom_density_ridges(scale = 2) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group)) +
geom_density_ridges(scale = 2) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges()
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.09, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(3, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
0.09
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.09, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(5, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(5, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(1, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 1, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 3, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
xlim(0, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme(legend.position = "none") +
xlim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Violin plot of CT results grouped by health care category",
x = "ct results",
y = "health care") +
theme(legend.position = "none") +
xlim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "health care") +
theme(legend.position = "none") +
xlim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results")+
theme(legend.position = "none") +
xlim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(0, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none")
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(15, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(15, 45)
50
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(15, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
payor_group
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(15, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(15, 50)
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(15, 50)
View(data1)
library(tidyverse)
library(here)
library(GGally)
library(ggridges)
#loading post-tidied data set
data1 <- read_delim(here("data", "exam_data_tidier_2025-09-09.txt"), delim = " ")
ggplot(data1, aes(x = payor_group, y = ct_result, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
ggplot(data1, aes(x = result, y = age, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
ggplot(data1, aes(x = result, y = age, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = result, y = age, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "right")
ggplot(data1, aes(x = result, y = age, fill = age)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "right")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "right")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "result",
y = "age") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "",
y = "age") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot representing the age distribution regarding the result of a corona test.",
x = "",
y = "age") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot representing the age distribution of a corona test result.",
x = "",
y = "age") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot representing the age distribution of a corona test result",
x = "",
y = "age") +
theme_minimal() +
theme(legend.position = "none")
#started on 10.09.25 -  ----
#loading libraries
install.packages("ggridges")
library(tidyverse)
library(here)
library(GGally)
library(ggridges)
#loading post-tidied data set
data1 <- read_delim(here("data", "exam_data_tidier_2025-09-09.txt"), delim = " ")
#Does the distribution of the ct_result differ with payor_group?
# Violin plot: shows full distribution shape
ggplot(data1, aes(x = payor_group, y = ct_result, fill = payor_group)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot of CT results grouped by health care category",
x = "health care",
y = "ct result") +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, 50)
#Ridgeline chart: shows density distribution for all groups
ggplot(data1, aes(y = payor_group, x = ct_result, fill = payor_group, height = after_stat(density))) +
geom_density_ridges(scale = 2, stat = "density") +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0.01, 0)) +
theme_ridges() +
labs(title = "Ridgeline chart of CT results grouped by health care category",
x = "ct results",
y = "") +
theme(legend.position = "none") +
xlim(15, 50)
#Is the age of the individual associated with whether the test result is negative or positive?
ggplot(data1, aes(x = result, y = age, fill = result)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.2, fill = "white") +
labs(title = "Violin plot representing the age distribution of a corona test result",
x = "",
y = "age") +
theme_minimal() +
theme(legend.position = "none")
