#day5_postlunch
#workingtogether
library(tidyverse)
library(here)
setwd("~/Courses/R/R PhD course uib/data_freak_exam_project")
library ("data" here)
# Read the .txt file from the data folder
exam_data <- read_delim(here("data", "exam_data_join.txt"), delim = "\t")
# Read the .txt file from the data folder
exam_data_join <- read_delim(here("data", "exam_data_join.txt"), delim = "\t")
spec(exam_data_join)
glimpse(exam_data_join)
skimmer(exam_data_join)
install.packages(skimmer)
library(skimr)
install.packages("skimr")
skimr(exam_data_join)
library(skimr)
install.packages("skimr")
skimr(exam_data_join)
skimr::skim(exam_data_join)
View(exam_data_join)
View(exam_data_join)
#are there  only unique observations in the data?
n_distinct(exam_data_join$id)
#are there  only unique observations in the data?
count(id)
#day5_postlunch
#workingtogether
library(tidyverse)
#are there  only unique observations in the data?
length(unique(exam_data_join$id))
# Get all column names
col_names <- colnames(exam_data_join)
# Check for columns with values containing common delimiters
combined_vars <- exam_data_join %>%
summarise(across(everything(), ~ any(grepl("[,;/|]", .)))) %>%
pivot_longer(everything(), names_to = "column", values_to = "has_combined_values") %>%
filter(has_combined_values)
View(exam_data)
View(exam_data_join)
# Read the .txt file from the data folder
exam_data <- read_delim(here("data", "exam_data.txt"), delim = "\t")
library(here)
# Read the .txt file from the data folder
exam_data <- read_delim(here("data", "exam_data.txt"), delim = "\t")
spec(exam_data)
glimpse(exam_data)
skimr::skim(exam_data)
#are there  only unique observations in the data?
length(unique(exam_data$id))
View(exam_data)
length(unique(exam_data$subject))
# Get all column names
col_names <- colnames(exam_data)
# Check for columns with values containing common delimiters
combined_vars <- exam_data %>%
summarise(across(everything(), ~ any(grepl("[,;/|]", .)))) %>%
pivot_longer(everything(), names_to = "column", values_to = "has_combined_values") %>%
filter(has_combined_values)
length(unique(exam_data$subject))
distinct(exam_data$subject)
distinct(exam_data)
distinct(exam_data)
#day5_postlunch
#workingtogether
library(tidyverse)
distinct(exam_data)
exam_data%>%
distinct(subject)
distinct(exam_data)
exam_data%>%
distinct(exam_data$subject)
# Read the .txt file from the data folder
exam_data_join <- read_delim(here("data", "exam_data_join.txt"), delim = "\t")
glimpse(exam_data_join)
exam_data%>%
distinct(exam_data$subject)
length(unique(exam_data$subject))
library(tidyverse)
library(here)
# Read the .txt file from the data folder
exam_data <- read_delim(here("data", "exam_data.txt"), delim = "\t")
spec(exam_data)
glimpse(exam_data)
skimr::skim(exam_data)
length(unique(exam_data$subject))
exam_data%>%
distinct(exam_data$subject)
# Get all column names
col_names <- colnames(exam_data)
# Check for columns with values containing common delimiters
combined_vars <- exam_data %>%
summarise(across(everything(), ~ any(grepl("[,;/|]", .)))) %>%
pivot_longer(everything(), names_to = "column", values_to = "has_combined_values") %>%
filter(has_combined_values)
#Day6
library(tidyverse)
library(here)
data<-read_csv(exam_data.csv)
exam_data <- read_delim(here("data", "exam_data.txt"), delim = "\t")
spec(exam_data)
glimpse(exam_data)
skimr::skim(exam_data)
exam_data <- read_delim(here("data", "exam_data_tidy.txt"), delim = "\t")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
exam_data <- read_delim(here("data", "exam_data_tidy.txt"), delim = "\t")
#Day6
library(tidyverse)
library(here)
#Read the .txt file from the folder
exam_data_tidy <- read_delim(here("data", "exam_data_tidy.txt"), delim = "\t")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
exam_data_tidy <- read.csv("~/Courses/R/R PhD course uib/data_freak_exam_project/data/exam_data_tidy.txt", sep="")
View(exam_data_tidy)
table(df$time_measurement)
str(df)
skimr::skim(exam_data_tidy)
# Create new column
df <- df %>%
mutate(rec_ver_tat_level = case_when(
time_measurement == "rec_ver_tat" & value > 100 ~ "High",
time_measurement == "rec_ver_tat" & value <= 100 ~ "Low",
TRUE ~ NA_character_ ))
?pivot_wider
pivot_wider(time_measurement)
exam_data_tidy %>%
pivot_wider(names_from = time_measurement, values_from = value)
glimpse(exam_data_tidy)
exam_data_tidy %>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy_wide <- exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
View(exam_data_tidy_wide)
exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat > 100, "High", "Low"))
exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat > 100, "High", "Low"))
View(exam_data_tidy_wide)
View(exam_data_tidy_wide)
View(exam_data_tidy_wide)
exam_data_tidy_wide %>%
mutate(rec_ver_tat = map_dbl(rec_ver_tat, 1),   # extract numeric value
rec_ver_tat_level = if_else(rec_ver_tat > 100, "High", "Low"))
exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = map_chr(rec_ver_tat,
~ if_else(any(.x > 100), "High", "Low")))
exam_data_tidy_wide %>% pull(rec_ver_tat) %>% str()
exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat > 100, "High", "Low"))
exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
exam_data_tidy_wide <- exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
#Day6
library(tidyverse)
library(here)
#Read the .txt file from the folder
exam_data_tidy <- read_delim(here("data", "exam_data_tidy.txt"), delim = "\t")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
str(df)
# Create new column
exam_data_tidy_wide <- exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy_wide <- exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
#Read the .txt file from the folder
exam_data_tidy <- read_delim(here("data", "exam_data_tidy.txt"), delim = " ")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
str(df)
# Create new column
exam_data_tidy_wide <- exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy_wide <- exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
View(exam_data_tidy_wide)
view(exam_data_join)
exam_data_join <- read.delim("~/Courses/R/R PhD course uib/data_freak_exam_project/data/exam_data_join.txt")
View(exam_data_join)
merged_df <- left_join(df1, df2, by = c("id" = "ID"))
merged_df <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("id" = "ID")
)
merged_df <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
View(merged_df)
library(tidyverse)
library(here)
df %>%
filter(patient_class == "inpatient") %>%
group_by(gender) %>%
summarise(
min_value  = min(pan_day, na.rm = TRUE),
max_value  = max(pan_day, na.rm = TRUE),
mean_value = mean(pan_day, na.rm = TRUE),
sd_value   = sd(pan_day, na.rm = TRUE),
.groups = "drop"
)
spec(exam_data_tidy)
class(f)
glimpse(merged_df)
#Day6
library(tidyverse)
library(here)
#Read the .txt file from the folder
exam_data_tidy <- read_delim(here("data", "exam_data_tidy.txt"), delim = " ")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
str(df)
# Create new column
exam_data_tidy_wide <- exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy_wide <- exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
merged_df <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
View(exam_data_tidy_wide)
View(exam_data_tidy_wide)
merged_df <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
exam_data_join <- read.delim("~/Courses/R/R PhD course uib/data_freak_exam_project/data/exam_data_join.txt")
View(exam_data_join)
merged_df <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
View(merged_df)
head(merged_df)
str(merged_df)
dim(merged_df)
write.table(merged_df, "merged_data.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(merged_df, "merged_data.txt", sep = "\t", row.names = FALSE, quote = FALSE)
head(merged_df)
str(merged_df)
dim(merged_df)
#Read the .txt file from the folder
merged_data.txt <- read_delim(here("data", "merged_data.txt"), delim = " ")
spec(merged_data)
glimpse(merged_data)
skimr::skim(merged_data)
View(merged_data.txt)
head(merged_df)
#Day6
library(tidyverse)
library(here)
#Read the .txt file from the folder
exam_data_tidy <- read_delim(here("data", "exam_data_tidy.txt"), delim = " ")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
str(df)
# Create new column
exam_data_tidy_wide <- exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy_wide <- exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
merged_df <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
head(merged_df)
str(merged_df)
dim(merged_df)
exam_data_merged <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
exam_data_join <- read.delim("~/Courses/R/R PhD course uib/data_freak_exam_project/data/exam_data_join.txt")
View(exam_data_join)
exam_data_merged <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
View(exam_data_merged)
df %>%
filter(patient_class == "inpatient") %>%
df %>%
group_by(gender) %>%
min_value  = min(pan_day, na.rm = TRUE),
mean_value = mean(pan_day, na.rm = TRUE),
.groups = "drop"
exam_data_merged %>%
count(antibody)
exam_data_merged %>%
count(antibody) %>%
sort(TRUE)
exam_data_merged %>%
count(antibody) %>%
sort()
View(exam_data_merged)
filter(patient_class == "inpatient") %>%
summarise(
max_value  = max(pan_day,na.rm = TRUE),
sd_value   = sd(pan_day,na.rm = TRUE),
#Day6
library(tidyverse)
library(here)
view(exam_data_merged)
library(tidyverse)
library(here)
view(exam_data_merged)
View(exam_data_merged)
spec(exam_data_tidy)
#Read the .txt file from the folder
exam_data_tidy <- read_delim(here("data", "exam_data_tidy.txt"), delim = " ")
spec(exam_data_tidy)
glimpse(exam_data_tidy)
skimr::skim(exam_data_tidy)
str(df)
# Create new column
exam_data_tidy_wide <- exam_data_tidy %>%
distinct()%>%
pivot_wider(
names_from = time_measurement,
values_from = value)
exam_data_tidy_wide <- exam_data_tidy_wide %>%
mutate(rec_ver_tat_level = if_else(rec_ver_tat <= 100, "Low", "High"))
exam_data_merged <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
View(exam_data_merged)
View(exam_data_tidy_wide)
exam_data_join <- read.delim("~/Courses/R/R PhD course uib/data_freak_exam_project/data/exam_data_join.txt")
View(exam_data_join)
exam_data_merged <- left_join(
exam_data_tidy_wide,
exam_data_join,
by = c("ID" = "id")
)
View(exam_data_merged)
count %>% count(antibody)
View(exam_data_merged)
write_delim(
exam_data_merged,
file = here("data", fileName),
delim = "\t"
)
write_delim(
exam_data_merged,
file = here("data", fileName),
delim = "\t"
)
fileName <- paste0("exam_data_merged", ".txt")
write_delim(
exam_data_merged,
file = here("data", fileName),
delim = "\t"
)
merged_data <- read_delim(here("data", "exam_data_merged.txt"))
view(merged_data)
merged_data %>%
filter(patient_class == "inpatient") %>%
group_by(gender) %>%
summarise(
min_value  = min(pan_day,na.rm = TRUE),
max_value  = max(pan_day,na.rm = TRUE),
mean_value = mean(pan_day,na.rm = TRUE),
sd_value   = sd(pan_day,na.rm = TRUE),
.groups = "drop"
)
merged_data %>%
table(df$gender, df$rec_ver_tat_level)
merged_data %>%
table(data()$gender, data()$rec_ver_tat_level)
merged_data %>%
with(table(gender, rec_ver_tat_level))
#Question 4, creating plots
install.packages("GGally")
library(GGally)
install.packages("ggplot2")
library(GGally)
# Select only numeric columns from your dataset
merged_data %>%
select(where(is.numeric)) %>%
ggcorr(
method = c("everything", "pearson"),
label = TRUE,
label_round = 2
)
#Day6
library(tidyverse)
library(here)
library(GGally)
# Select only numeric columns from your dataset
merged_data %>%
select(where(is.numeric)) %>%
ggcorr(
method = c("everything", "pearson"),
label = TRUE,
label_round = 2
)
#Use two categorical columns in your dataset to create a table (either with table(), count(), or janitor::tabyl())
merged_data %>%
with(table(gender, rec_ver_tat_level))
merged_data <- read_delim(here("data", "exam_data_merged.txt"))
view(merged_data)
#Stratify your data by a categorical column and report min, max, mean and sd of a numeric column
#Only for persons with patient_class == inpatient
merged_data %>%
filter(patient_class == "inpatient") %>%
group_by(gender) %>%
summarise(
min_value  = min(pan_day,na.rm = TRUE),
max_value  = max(pan_day,na.rm = TRUE),
mean_value = mean(pan_day,na.rm = TRUE),
sd_value   = sd(pan_day,na.rm = TRUE),
.groups = "drop"
)
#Use two categorical columns in your dataset to create a table (either with table(), count(), or janitor::tabyl())
merged_data %>%
with(table(gender, rec_ver_tat_level))
# Select only numeric columns from your dataset
merged_data %>%
select(where(is.numeric)) %>%
ggcorr(
method = c("everything", "pearson"),
label = TRUE,
label_round = 2
)
#Question 4 Were there more females than males that took the test at a drive through?
merged_data %>%
with(table(gender, drive_thru_ind))
#Yes, there were more females (n=4035) than males (n=3952)
merged_data %>%
filter(drive_thru_ind == 1) %>%              # keep only drive-through tests
ggplot(aes(x = gender, fill = gender)) +     # gender on x-axis
geom_bar() +                                 # bar plot of counts
labs(
title = "Drive-through tests by gender",
x = "Gender",
y = "Number of tests at drive thru"
) +
theme_minimal() +
theme(legend.position = "none")              # remove legend (optional)
#Question 4 Does the time spent waiting for the test result improve during these 100 days that the dataset includes?
#need to find correlation between rec_ver_tat and pan_day
merged_data %>%
ggplot(aes(x = pan_day, y = rec_ver_tat)) +
geom_point(alpha = 0.4, color = "steelblue") +     # scatterplot of points
geom_smooth(method = "loess", se = TRUE, color = "red") +  # smooth trend line
labs(
title = "Change in waiting time for test results over 100 days",
x = "Day after start of pandemic",
y = "Waiting time (receive → verification)"
) +
theme_minimal()
# Select only numeric columns from your dataset
merged_data %>%
select(where(is.numeric)) %>%
ggcorr(
method = c("everything", "pearson"),
label = TRUE,
label_round = 2
)
#Quesiton 5
#Are there more positive tests in the drive-through?
merged_data %>%
with(table(result, drive_thru_ind))
merged_data %>%
with(prop.table(table(result, drive_thru_ind)))
